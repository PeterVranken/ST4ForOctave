function st4SetLocaleUS

%   st4SetLocaleUS - Set the locale of the Java Virtual Machine of the current Octave
%                   session to US.
%                     Without forcing the locale of the Octave session to a well-defined
%                   setting, the output generated by the StringTemplate V4 engine may
%                   easily depend on the region the software is run in. This can lead to
%                   ugly, probably undesired things like 3,1415 when printing pi with the
%                   number renderer (i.e. using the formatted, printf like output) in a
%                   template. Generally using locale US avoids these problems.
%                     If you expeience locale related problems you may consider putting
%                   this script into your initialization M script code of your application.
%                   
%   Input argument(s):
%
%   Return argument(s):
%
%   Exceptions(s):
%                   An error is thrown if setting the locale fails.
%   Example(s):
%       st4addpath
%       st4javaaddpath
%       st4SetLocaleUS
%       testST4Render
%
%   Copyright (C) 2020 Peter Vranken (mailto:Peter_Vranken@Yahoo.de)
%
%   This program is free software: you can redistribute it and/or modify it
%   under the terms of the GNU Lesser General Public License as published by the
%   Free Software Foundation, either version 3 of the License, or any later
%   version.
%  
%   This program is distributed in the hope that it will be useful, but WITHOUT
%   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%   FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
%   for more details.
%  
%   You should have received a copy of the GNU Lesser General Public License
%   along with this program. If not, see <http://www.gnu.org/licenses/>.

    % Call of static method getDefault of class Locale to see which country we
    % operate the software in.
    locale = javaMethod('getDefault', 'java.util.Locale');

    % It should be US to avoid problems with representation of numbers and
    % dates, we switch to the US standard. Local differences will easy affect
    % the output of StringTemplate V4, which will be desirable for barely any
    % use case.
    if ~strcmp(locale.getLanguage(), 'us')
        % Create a US Locale object...
        localeUSObj = javaObject('java.util.Locale', 'US');
        % ... and pass it to the static class method setDefault.
        javaMethod('setDefault', 'java.util.Locale', localeUSObj);
    end

    % Now, we should surely use the US representation of numbers and dates.
    locale = javaMethod('getDefault', 'java.util.Locale');
    assert(strcmp(locale.getLanguage(), 'us'), 'Failed to set US locale')

end % of function st4SetLocaleUS.



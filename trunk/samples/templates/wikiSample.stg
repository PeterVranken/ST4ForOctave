cCode(dd) ::= <<
<! Iterate all entries in the DD as C source code !>
<dd:renderSignalAsC()>
>>

hCode(dd) ::= <<
<! Iterate all entries in the DD as header file content !>
<dd:renderSignalAsH()>
>>

renderSignalAsC(s) ::= <<
/** The binary value that represents signal <s.name>. */
<s.type> <s.name> = 0;

/** Convert the binary value of signal <s.name> into the physical value.
      @return Get the physical value as double.
      @param b The binary representation of signal <s.name>. */
double bin2phys_<s.name>(<s.type> b) {return (double)<s.gain>*<s.name> + <s.offset>;}
<\n>
>>

renderSignalAsH(s) ::= <<
/* The binary representation of signal <s.name> and a conversion to its physical value. */
extern <s.type> <s.name>;
extern double bin2phys_<s.name>(<s.type> b);
<\n>
>>